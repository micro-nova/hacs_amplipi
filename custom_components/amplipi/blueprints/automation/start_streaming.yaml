blueprint:
  name: "AmpliPi Start Streaming"
  description: "Connect a Source to a Stream and assign Zone(s) to the Source.\nAfter filling out these sections, hit the three dots in the top right and hit 'Take Control' to set the triggers of the automation"
  domain: automation
  author: Micro-Nova

  input:
    source:
      name: "Source"
      description: "Select the source\nOptional, used to ensure the automation still works when all 4 sources are in use via overriding a connected stream"
      default: "Any"
      selector:
        entity:
          filter:
            - device_class: receiver
            - integration: AmpliPi

    stream:
      name: "Stream"
      description: "Select the audio stream"
      selector:
        entity:
          filter:
            # "stream" is not a real media player device class, but that doesn't stop me from yielding "stream" from that property in AmpliPiStream
            - device_class: "stream"
            - integration: AmpliPi

    zones:
      name: "Zones"
      description: "Select one or more zones/groups for audio output"
      selector:
        entity:
          filter:
            - device_class: speaker
            - integration: AmpliPi
          multiple: true

    volume:
      name: "Volume"
      description: "Select what volume to start the zones on"
      selector:
        number:
          min: 0
          max: 1
          step: 0.01
          mode: slider

mode: single

action:
  - service: media_player.select_source
    target:
      entity_id: !input stream
    data:
      source: !input source

  - repeat:
      for_each: !input zones
      sequence:
          
        - service: media_player.volume_set
          data:
            volume_level: !input volume
          target:
            entity_id: "{{ repeat.item }}"

        # Mute before connecting so that the second loop has the chance to turn the zones/groups on all at once
        - service: media_player.volume_mute
          target:
            entity_id: "{{ repeat.item }}"
          data:
            is_volume_muted: true

        - service: media_player.select_source
          target:
            entity_id: !input stream
          data:
            source: "{{ repeat.item }}"

# A second repeat loop so that every zone is already connected with a volume set before all turning on at once
# This reduces the chance of having the zones/groups turn on one by one with a noticable gap between them
  - repeat:
      for_each: !input zones
      sequence:
        - service: media_player.volume_mute
          target:
            entity_id: "{{ repeat.item }}"
          data:
            is_volume_muted: false
            